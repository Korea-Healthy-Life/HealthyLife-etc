CREATE DATABASE IF NOT EXISTS HEALTHY_LIFE;
USE HEALTHY_LIFE;

-- Users Table
CREATE TABLE USERS (
    USER_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'USER MAIN KEY',
    USER_NAME VARCHAR(255) NOT NULL COMMENT '아이디 EX) qwer1234',
    USER_NICKNAME VARCHAR(255) NOT NULL COMMENT '닉네임',
    USER_PASSWORD VARCHAR(255) NOT NULL COMMENT '비밀번호',
    NAME VARCHAR(255) NOT NULL COMMENT '이름 EX) 홍길동',
    USER_EMAIL VARCHAR(255) NOT NULL COMMENT '이메일',
    USER_PHONE VARCHAR(255) NOT NULL COMMENT '핸드폰 번호',
    USER_BIRTH VARCHAR(255) NOT NULL COMMENT '생일',
    USER_ADDRESS VARCHAR(255) NOT NULL COMMENT '주소',
    USER_ADDRESS_DETAIL VARCHAR(255) NOT NULL COMMENT '유저 상세주소',
    USER_GENDER ENUM('M', 'F') NOT NULL DEFAULT 'M' COMMENT 'M 또는 F',
    USER_MEMBER_GRADE ENUM('병아리', '오골계', '닭', '독수리') NOT NULL DEFAULT '병아리' COMMENT '회원 등급'
);

-- Products Table
CREATE TABLE PRODUCTS (
    P_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'PRODUCT_MAIN_KEY',
    P_NAME VARCHAR(255) NOT NULL COMMENT '상품명',
    P_PRICE INT NOT NULL COMMENT '가격',
    P_DESCRIPTION TEXT NOT NULL COMMENT '상품 설명',
    P_INGREDIENTS TEXT NOT NULL COMMENT '성분 정보',
    P_NUTRITION_INFO TEXT NOT NULL COMMENT '영양 성분표',
    P_ORIGIN VARCHAR(255) NOT NULL COMMENT '원산지',
    P_USAGE VARCHAR(255) NOT NULL COMMENT '사용 방법',
    P_EXPIRATION_DATE DATE NOT NULL COMMENT '유통기한',
    P_MANUFACTURER VARCHAR(255) NOT NULL COMMENT '제조사 정보',
    P_IMG_URL VARCHAR(255) NOT NULL COMMENT '상품 이미지 URL',
    P_STOCK_STATUS INT NOT NULL COMMENT '재고 상태'
);

-- Product Category Table
CREATE TABLE PRODUCT_CATEGORY (
    P_CATEGORY_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'CATEGORY_TYPE_MAIN_KEY',
    P_CATEGORY_NAME VARCHAR(255) NOT NULL COMMENT '카테고리 명'
);

-- Product Category Details Table
CREATE TABLE PRODUCT_CATEGORY_DETAILS (
    P_CATEGORY_DETAILS_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'CATEGORY_DETAILS_MAIN_KEY',
    P_CATEGORY_ID BIGINT NOT NULL COMMENT 'CATEGORY_TYPE_MAIN_KEY',
    P_ID BIGINT NOT NULL COMMENT 'PRODUCT_MAIN_KEY',
    P_CATEGORY_DETAILS_NAME VARCHAR(255) NOT NULL COMMENT '제품 타입 명',
    FOREIGN KEY (P_CATEGORY_ID) REFERENCES PRODUCT_CATEGORY(P_CATEGORY_ID),
    FOREIGN KEY (P_ID) REFERENCES PRODUCTS(P_ID)
);

-- Cart Table
CREATE TABLE CART (
    CART_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'CART MAIN KEY',
    USER_ID BIGINT NOT NULL COMMENT 'USER MAIN KEY',
    P_ID BIGINT NOT NULL COMMENT 'PRODUCT_MAIN_KEY',
    PRODUCT_QUANTITY INT NOT NULL DEFAULT 1 COMMENT '제품 수량',
    PRODUCT_PRICE INT NOT NULL COMMENT '제품 총 계',
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (P_ID) REFERENCES PRODUCTS(P_ID)
);

-- Wish List Table
CREATE TABLE WISH_LIST (
    WISH_LIST_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'WISH_LIST MAIN KEY',
    USER_ID BIGINT NOT NULL COMMENT 'USER MAIN KEY',
    P_ID BIGINT NOT NULL COMMENT 'PRODUCT_MAIN_KEY',
    WISH_LIST_ADDED_AT DATE NOT NULL COMMENT '위시리스트에 추가된 시간',
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (P_ID) REFERENCES PRODUCTS(P_ID)
);

-- Orders Table
CREATE TABLE ORDERS (
    ORDER_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'ORDER MAIN KEY',
    USER_ID BIGINT NOT NULL COMMENT 'USER MAIN KEY',
    P_ID BIGINT NOT NULL COMMENT 'PRODUCT_MAIN_KEY',
    ORDER_DATE DATE NOT NULL DEFAULT (CURRENT_DATE) COMMENT '주문 날짜',
    ORDER_STATUS ENUM('PENDING', 'CONFIRMED', 'PREPARING', 'SHIPPED', 'DELIVERED', 'CANCELLED', 'REFUNDED') NOT NULL DEFAULT 'PENDING' COMMENT '주문상태',
    ORDER_TOTAL_AMOUNT INT NOT NULL COMMENT '주문 총액',
    ORDER_SHIPPING_COST INT NOT NULL DEFAULT 3000 COMMENT '배송 비용',
    ORDER_SHIPPING_REQUEST VARCHAR(255) NOT NULL COMMENT '배송 요청',
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (P_ID) REFERENCES PRODUCTS(P_ID)
);

-- Shipping Table
CREATE TABLE SHIPPING (
    SHIPPING_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'SHIPPING MAIN KEY',
    ORDER_ID BIGINT NOT NULL COMMENT 'ORDER MAIN KEY',
    SHIPPING_TRACKING_NUM INT NOT NULL COMMENT '추적 정보 번호',
    SHIPPING_SHIPPED_AT DATE NOT NULL COMMENT '배송 시작 날짜',
    SHIPPING_DELIVERED_AT DATE NOT NULL COMMENT '배송 완료 날짜',
    SHIPPING_STATUS ENUM('PENDING', 'SHIPPED', 'DELIVERED', 'CANCELLED') NOT NULL COMMENT '배송 상태',
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID)
);

-- Payments Table
CREATE TABLE PAYMENTS (
    PAYMENT_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'ORDER_PAYMENT MAIN KEY',
    ORDER_ID BIGINT NOT NULL COMMENT 'ORDER MAIN KEY',
    USER_ID BIGINT NOT NULL COMMENT 'USER MAIN KEY',
    PAYMENT_METHOD ENUM('CREDIT_CARD', 'POINT') NOT NULL COMMENT '결제수단',
    PAYMENT_STATUS ENUM('COMPLETED', 'FAILED', 'REFUNDED') NOT NULL COMMENT '결제상태',
    PAYMENT_DATE DATE NOT NULL DEFAULT (CURRENT_DATE) COMMENT '결제날짜',
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- Reviews Table
CREATE TABLE REVIEWS (
    REVIEW_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'REVIEW MAIN KEY',
    USER_ID BIGINT NOT NULL COMMENT 'USER MAIN KEY',
    P_ID BIGINT NOT NULL COMMENT 'PRODUCT_MAIN_KEY',
    REVIEW_RATING DOUBLE NOT NULL COMMENT '리뷰 별점',
    REVIEW_CONTENT TEXT NOT NULL COMMENT '리뷰 내용',
    REVIEW_CREATE_AT DATE NOT NULL COMMENT '리뷰 작성 일 / 시간',
    REVIEW_IMG_URL VARCHAR(225) NULL COMMENT '리뷰 이미지 URL',
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (P_ID) REFERENCES PRODUCTS(P_ID)
);

-- QnA Table
CREATE TABLE QNA (
    QNA_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'QNA MAIN KEY',
    USER_ID BIGINT NOT NULL COMMENT 'USER MAIN KEY',
    QNA_TITLE VARCHAR(255) NOT NULL COMMENT 'QnA 제목',
    QNA_CONTENT TEXT NOT NULL COMMENT 'QnA 내용',
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- Physique Tag Table
CREATE TABLE PHYSIQUE_TAG (
    PHYSIQUE_TAG_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'PHYSIQUE_TAG MAIN KEY',
    P_ID BIGINT NOT NULL COMMENT 'PRODUCT_MAIN_KEY',
    PHYSIQUE_TAG_NAME VARCHAR(255) NOT NULL COMMENT '체질 태그 이름',
    FOREIGN KEY (P_ID) REFERENCES PRODUCTS(P_ID)
);

-- User Physique Tag Table
CREATE TABLE USER_PHYSIQUE_TAG (
    PHYSIQUE_TAG_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '복합키',
    USER_ID BIGINT NOT NULL COMMENT 'USER MAIN KEY',
    FOREIGN KEY (PHYSIQUE_TAG_ID) REFERENCES PHYSIQUE_TAG(PHYSIQUE_TAG_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- Delivery Address Table
CREATE TABLE DELIVER_ADDRESS (
    USER_ID BIGINT NOT NULL PRIMARY KEY COMMENT 'USER MAIN KEY',
    ADDRESS VARCHAR(255) NOT NULL COMMENT '주소',
    ADDRESS_DETAIL VARCHAR(255) NOT NULL COMMENT '주소 상세',
    POST_NUM INT NOT NULL COMMENT '우편번호',
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);